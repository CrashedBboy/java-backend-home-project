/*
 * This file is generated by jOOQ.
 */
package com.test.bank.db.tables.records;


import com.test.bank.db.tables.Transaction;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TransactionRecord extends UpdatableRecordImpl<TransactionRecord> implements Record6<UInteger, UInteger, UInteger, Byte, UInteger, Timestamp> {

    private static final long serialVersionUID = 1795969989;

    /**
     * Setter for <code>bank.Transaction.id</code>.
     */
    public void setId(UInteger value) {
        set(0, value);
    }

    /**
     * Getter for <code>bank.Transaction.id</code>.
     */
    public UInteger getId() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>bank.Transaction.fromUserId</code>.
     */
    public void setFromuserid(UInteger value) {
        set(1, value);
    }

    /**
     * Getter for <code>bank.Transaction.fromUserId</code>.
     */
    public UInteger getFromuserid() {
        return (UInteger) get(1);
    }

    /**
     * Setter for <code>bank.Transaction.ToUserId</code>.
     */
    public void setTouserid(UInteger value) {
        set(2, value);
    }

    /**
     * Getter for <code>bank.Transaction.ToUserId</code>.
     */
    public UInteger getTouserid() {
        return (UInteger) get(2);
    }

    /**
     * Setter for <code>bank.Transaction.action</code>.
     */
    public void setAction(Byte value) {
        set(3, value);
    }

    /**
     * Getter for <code>bank.Transaction.action</code>.
     */
    public Byte getAction() {
        return (Byte) get(3);
    }

    /**
     * Setter for <code>bank.Transaction.adminId</code>.
     */
    public void setAdminid(UInteger value) {
        set(4, value);
    }

    /**
     * Getter for <code>bank.Transaction.adminId</code>.
     */
    public UInteger getAdminid() {
        return (UInteger) get(4);
    }

    /**
     * Setter for <code>bank.Transaction.createdAt</code>.
     */
    public void setCreatedat(Timestamp value) {
        set(5, value);
    }

    /**
     * Getter for <code>bank.Transaction.createdAt</code>.
     */
    public Timestamp getCreatedat() {
        return (Timestamp) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<UInteger, UInteger, UInteger, Byte, UInteger, Timestamp> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<UInteger, UInteger, UInteger, Byte, UInteger, Timestamp> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field1() {
        return Transaction.TRANSACTION.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field2() {
        return Transaction.TRANSACTION.FROMUSERID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field3() {
        return Transaction.TRANSACTION.TOUSERID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field4() {
        return Transaction.TRANSACTION.ACTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field5() {
        return Transaction.TRANSACTION.ADMINID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field6() {
        return Transaction.TRANSACTION.CREATEDAT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger component2() {
        return getFromuserid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger component3() {
        return getTouserid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component4() {
        return getAction();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger component5() {
        return getAdminid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component6() {
        return getCreatedat();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value2() {
        return getFromuserid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value3() {
        return getTouserid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value4() {
        return getAction();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value5() {
        return getAdminid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value6() {
        return getCreatedat();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionRecord value1(UInteger value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionRecord value2(UInteger value) {
        setFromuserid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionRecord value3(UInteger value) {
        setTouserid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionRecord value4(Byte value) {
        setAction(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionRecord value5(UInteger value) {
        setAdminid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionRecord value6(Timestamp value) {
        setCreatedat(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionRecord values(UInteger value1, UInteger value2, UInteger value3, Byte value4, UInteger value5, Timestamp value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TransactionRecord
     */
    public TransactionRecord() {
        super(Transaction.TRANSACTION);
    }

    /**
     * Create a detached, initialised TransactionRecord
     */
    public TransactionRecord(UInteger id, UInteger fromuserid, UInteger touserid, Byte action, UInteger adminid, Timestamp createdat) {
        super(Transaction.TRANSACTION);

        set(0, id);
        set(1, fromuserid);
        set(2, touserid);
        set(3, action);
        set(4, adminid);
        set(5, createdat);
    }
}
