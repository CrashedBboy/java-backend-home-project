/*
 * This file is generated by jOOQ.
 */
package com.test.bank.db;


import com.test.bank.db.tables.Admin;
import com.test.bank.db.tables.Adminrole;
import com.test.bank.db.tables.Role;
import com.test.bank.db.tables.Transaction;
import com.test.bank.db.tables.User;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Bank extends SchemaImpl {

    private static final long serialVersionUID = -708346785;

    /**
     * The reference instance of <code>bank</code>
     */
    public static final Bank BANK = new Bank();

    /**
     * The table <code>bank.Admin</code>.
     */
    public final Admin ADMIN = com.test.bank.db.tables.Admin.ADMIN;

    /**
     * The table <code>bank.AdminRole</code>.
     */
    public final Adminrole ADMINROLE = com.test.bank.db.tables.Adminrole.ADMINROLE;

    /**
     * The table <code>bank.Role</code>.
     */
    public final Role ROLE = com.test.bank.db.tables.Role.ROLE;

    /**
     * The table <code>bank.Transaction</code>.
     */
    public final Transaction TRANSACTION = com.test.bank.db.tables.Transaction.TRANSACTION;

    /**
     * The table <code>bank.User</code>.
     */
    public final User USER = com.test.bank.db.tables.User.USER;

    /**
     * No further instances allowed
     */
    private Bank() {
        super("bank", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            Admin.ADMIN,
            Adminrole.ADMINROLE,
            Role.ROLE,
            Transaction.TRANSACTION,
            User.USER);
    }
}
