/*
 * This file is generated by jOOQ.
 */
package com.test.bank.db.tables.records;


import com.test.bank.db.tables.Adminrole;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AdminroleRecord extends UpdatableRecordImpl<AdminroleRecord> implements Record2<UInteger, UInteger> {

    private static final long serialVersionUID = -2109142473;

    /**
     * Setter for <code>bank.AdminRole.roleId</code>.
     */
    public void setRoleid(UInteger value) {
        set(0, value);
    }

    /**
     * Getter for <code>bank.AdminRole.roleId</code>.
     */
    public UInteger getRoleid() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>bank.AdminRole.adminId</code>.
     */
    public void setAdminid(UInteger value) {
        set(1, value);
    }

    /**
     * Getter for <code>bank.AdminRole.adminId</code>.
     */
    public UInteger getAdminid() {
        return (UInteger) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<UInteger, UInteger> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<UInteger, UInteger> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<UInteger, UInteger> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field1() {
        return Adminrole.ADMINROLE.ROLEID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field2() {
        return Adminrole.ADMINROLE.ADMINID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger component1() {
        return getRoleid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger component2() {
        return getAdminid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value1() {
        return getRoleid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value2() {
        return getAdminid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AdminroleRecord value1(UInteger value) {
        setRoleid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AdminroleRecord value2(UInteger value) {
        setAdminid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AdminroleRecord values(UInteger value1, UInteger value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AdminroleRecord
     */
    public AdminroleRecord() {
        super(Adminrole.ADMINROLE);
    }

    /**
     * Create a detached, initialised AdminroleRecord
     */
    public AdminroleRecord(UInteger roleid, UInteger adminid) {
        super(Adminrole.ADMINROLE);

        set(0, roleid);
        set(1, adminid);
    }
}
